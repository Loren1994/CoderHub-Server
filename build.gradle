buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'war'
//apply plugin: 'com.google.protobuf'

group = 'pers.loren'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/" }
}

dependencies {
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.springframework.boot:spring-boot-starter')
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.41'
    implementation group: 'com.alibaba', name: 'druid', version: '1.0.24'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '1.5.2.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springBootVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: "$springBootVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: "$springBootVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: "$springBootVersion"
    implementation 'org.springframework.kafka:spring-kafka:2.1.6.RELEASE'
    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    implementation 'com.alibaba:fastjson:1.2.46'
    implementation 'io.jsonwebtoken:jjwt:0.6.0'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
//    implementation 'com.google.protobuf:protobuf-java:3.2.0'
    implementation 'com.gexin.platform:gexin-rp-sdk-http:4.0.1.17'
    implementation 'org.apache.commons:commons-pool2:2.5.0'
}

//sourceSets.proto.srcDir += 'pers/loren/coderhub/protobuf'

//protobuf {
//    protoc {
//        artifact = 'com.google.protobuf:protoc:3.2.0'
//    }
//    plugins {
//        javalite {
//            artifact = 'com.google.protobuf:protoc-gen-javalite:3.2.0'
//        }
//    }
//    generateProtoTasks {
//        all().each { task ->
//            task.plugins {
//                javalite {}
//            }
//        }
//    }
//    generatedFilesBaseDir = "$projectDir/src/generated"
//}
compileJava.dependsOn processResources
